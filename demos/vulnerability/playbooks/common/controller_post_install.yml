---
- name: Install collections - {{ inventory_hostname }}
  community.general.ansible_galaxy_install:
    dest: /usr/share/ansible/collections
    type: collection
    name: "{{ item }}"
  loop: "{{ controller_collections }}"
  register: __collection_install
  when: (controller_collections is defined) and (controller_collections | length > 0)

- name: Install EPEL repo
  ansible.builtin.dnf:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
    disable_gpg_check: true

- name: Install OS packages
  ansible.builtin.dnf:
    name: "{{ controller_os_packages }}"
    state: present
  when: (controller_os_packages is defined) and (controller_os_packages | length > 0)

- name: Install Python packages - {{ ansible_user_id }}
  ansible.builtin.pip:
    name: "{{ controller_pip_packages }}"
    state: present
  become: true
  when: (controller_pip_packages is defined) and (controller_pip_packages | length > 0)

- name: Install generic ansible.cfg in home directory
  ansible.builtin.template:
    src: ansible.cfg.j2
    dest: "/etc/ansible/ansible.cfg"
    owner: root
    mode: 0644

- name: Download custom execution environments
  when: (controller_execution_environments is defined) and (controller_execution_environments | length > 0)
  block:
    - name: Download and upgrade  containers.podman collection - {{ inventory_hostname }}
      community.general.ansible_galaxy_install:
        dest: /usr/share/ansible/collections
        type: collection
        name: containers.podman
      register: __collection_install
      # changed_when: '"is already installed, skipping" not in __collection_install.stdout'

    - name: Log into registry.redhat.io
      become_user: "awx"
      containers.podman.podman_login:
        registry: "registry.redhat.io"
        username: "{{ registry_username }}"
        password: "{{ registry_password }}"

    - name: Pull execution environment images
      become_user: "awx"
      containers.podman.podman_image:
        name: "{{ item.image }}"
      loop: "{{ controller_execution_environments }}"
      register: __podman_pull_supported
      until: __podman_pull_supported is not failed
      retries: 40
      delay: 2

